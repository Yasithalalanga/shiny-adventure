<api xmlns="http://ws.apache.org/ns/synapse" name="ConfigRetrievalAPI" context="/configs">
    <resource methods="GET" uri-template="/">
        <inSequence>
             <!-- Connection Related Non Senstive Configurations -->
            <variable name="connTokenURL" expression="${configs.CONN_TKN_URL}" type="STRING"/>
            <variable name="connServiceURL" expression="${configs.CONN_SVC_URL}" type="STRING"/>
            <variable name="connConsumerKey" expression="${configs.CONN_CON_KEY}" type="STRING"/>

            <!-- Connection Secrets Read From Vault -->
            <variable name="connConsumerSecret" expression="${wso2-vault('CONN_CON_SECRET')}" type="STRING"/>
            <variable name="connChoreoAPIKey" expression="${wso2-vault('CONN_API_KEY')}" type="STRING"/>

            <!-- Connection Secrets Read as Env Vars -->
            <variable name="connConsumerSecretEnv" expression="${configs.CONN_CON_SECRET}" type="STRING"/>
            <variable name="connChoreoAPIKeyEnv" expression="${configs.CONN_API_KEY}" type="STRING"/>

            <!-- Adhoc Config & Secret -->
            <variable name="dbUsername" expression="${configs.ADHOC_DB_USERNAME}" type="STRING"/>
            <variable name="dbPassword" expression="${wso2-vault('ADHOC_DB_PASSWORD')}" type="STRING"/>

            <!-- Create the response payload -->
            <payloadFactory media-type="json">
                <format>
                     {
                        "message": "Connection configurations",
                        "adhocConfigurations": {
                            "username": "${vars.dbUsername}",
                            "password": "${vars.dbPassword}",
                        },
                        "connectionGeneral": {
                            "tokenURL": "${vars.connTokenURL}",
                            "serviceURL": "${vars.connServiceURL}",
                            "consumerKey": "${vars.connConsumerKey}",
                        },
                        "connectionSecretsAsVault": {
                            "consumerSecret": "${vars.connConsumerSecret}",
                            "choreoAPIKey": "${vars.connChoreoAPIKey}"
                        },
                        "connectionSecretsAsEnvVars": {
                            "consumerSecretEnv": "${vars.connConsumerSecretEnv}",
                            "choreoAPIKeyEnv": "${vars.connChoreoAPIKeyEnv}"
                        }
                    }
                </format>
            </payloadFactory>
            
            <!-- Log the retrieval operation -->
            <log category="INFO">
                <message>Configuration values retrieved successfully</message>
            </log>
            
            <!-- Send the response back to the client -->
            <respond/>
        </inSequence>
    </resource>
</api>
